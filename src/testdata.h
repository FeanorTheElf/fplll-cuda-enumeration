/*
   (C) 2020 Simon Pohmann.
   This file is part of fplll. fplll is free software: you
   can redistribute it and/or modify it under the terms of the GNU Lesser
   General Public License as published by the Free Software Foundation,
   either version 2.1 of the License, or (at your option) any later version.
   fplll is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Lesser General Public License for more details.
   You should have received a copy of the GNU Lesser General Public License
   along with fplll. If not, see <http://www.gnu.org/licenses/>. */

#pragma once
#include <array>

/**
 * Uniform matrices, use for testing correctness
 */
extern const std::array<std::array<float, 20>, 20> test_mu_small;
extern const std::array<float, 20> test_solution_small;
extern const std::array<std::array<float, 50>, 50> test_mu_normal;
extern const std::array<float, 50> test_solution_normal;
extern const std::array<std::array<float, 60>, 60> test_mu_big;
extern const std::array<float, 60> test_solution_big;

/**
 * Knapsack matrices generated by latticegen
 */
extern const std::array<std::array<float, 40>, 40> test_mu_knapsack_normal;
extern const std::array<std::array<float, 50>, 50> test_mu_knapsack_big;

/**
 * Up to orthogonal transform equal to test_mu_knapsack_big. This is the result of
 * the fplll preprocessing on test_mu_knapsack_big, so use this to compare performance.
 */
extern const std::array<std::array<float, 50>, 50> test_mu_compare;
extern const std::array<float, 50> test_rdiag_compare;